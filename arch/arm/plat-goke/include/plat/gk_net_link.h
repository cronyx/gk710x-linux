/*!
*****************************************************************************
** \file        arch/arm/plat-goke/include/plat/gk_net_link.h
**
** \version     $Id: gk_net_link.h 10995 2016-11-18 01:16:58Z yulindeng $
**
** \brief
**
** \attention   THIS SAMPLE CODE IS PROVIDED AS IS. GOKE MICROELECTRONICS
**              ACCEPTS NO RESPONSIBILITY OR LIABILITY FOR ANY ERRORS OR
**              OMMISSIONS
**
** (C) Copyright 2012-2016 by GOKE MICROELECTRONICS CO.,LTD
**
*****************************************************************************
*/
#ifndef _GK_NET_LINK_H_
#define _GK_NET_LINK_H_



//*****************************************************************************
//*****************************************************************************
//** Defines and Macros
//*****************************************************************************
//*****************************************************************************
//////////////////////////////////////////////////
// include/linux/netlink.h
// The lastest id is NETLINK_CRYPTO = 21
#define NETLINK_GK_IPC      22
//////////////////////////////////////////////////
#define MAX_MSG_SIZE        (16-2)

#define GK_NL_GPIO_MSG_LEN   2
#define GK_NL_IR_MSG_LEN     1
#define GK_NL_SD_MSG_LEN     1
#define GK_NL_ETH_MSG_LEN   12


//*****************************************************************************
//*****************************************************************************
//** Enumerated types
//*****************************************************************************
//*****************************************************************************
typedef enum
{
    GK_NL_GPIO          = 0x0000005A,
    GK_NL_IR            = 0x000000A5,
    GK_NL_IR_433_KEY    = 0x00005A00,
    GK_NL_IR_433_GATE   = 0x0000A500,
    GK_NL_PMU_GPIO      = 0x00005A5A,
    GK_NL_SD            = 0x0000A5A5,
    GK_NL_ETH           = 0x005A0000,
}GK_MSG_TYPE_E;



//*****************************************************************************
//*****************************************************************************
//** Data Structures
//*****************************************************************************
//*****************************************************************************
typedef union
{
    u32 all[MAX_MSG_SIZE];
    struct
    {
        u8 id;
        u8 val;
    }gk_nl_gpio_data;
    struct
    {
        u8 key;
    }gk_nl_ir_data;
    struct
    {
        u8 insert;
    }gk_nl_sd_data;
    struct
    {
        u8 data[56];
    }gk_nl_433_data;
    struct
    {
        int link;
        int speed;
        int duplex;
    }gk_nl_eth_data;
}GK_MSG_DATA_S;

typedef struct
{
    u32 module;
    u32 len;
    GK_MSG_DATA_S data;
}GK_NET_LINK_MSG_S;



//*****************************************************************************
//*****************************************************************************
//** Global Data
//*****************************************************************************
//*****************************************************************************
extern struct sock *gk_nl_sk;



//*****************************************************************************
//*****************************************************************************
//** API Functions
//*****************************************************************************
//*****************************************************************************
extern void gk_nl_send_message(GK_NET_LINK_MSG_S* msg);



#ifdef __cplusplus
extern "C" {
#endif



#ifdef __cplusplus
}
#endif



#endif /* _GK_NET_LINK_H_ */

